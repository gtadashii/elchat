service: elchat
frameworkVersion: '2'

configValidationMode: error

plugins:
  - serverless-offline
  - serverless-prune-plugin

custom:
  prune:
    automatic: true
    number: 3

provider:
  name: aws
  runtime: nodejs14.x
  lambdaHashingVersion: 20201221
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - arn:aws:dynamodb:us-east-1:191154310521:table/usersTable

functions:
  criarUsuario:
    handler: src/handlers/criarUsuario.handler
    events:
      - http:
          path: /usarios
          method: POST
          cors: true
  retornarUsuario:
    handler: src/handlers/retornaUsuario.handler
    events:
      - http:
          path: /usarios/{id}
          method: GET
          cors: true
  login:
    handler: src/handlers/login.handler
    events:
      - http:
          path: /login
          method: POST
          cors: true
  criarChat:
    handler: src/handlers/criarChat.handler
    events:
      - http:
          path: /chats
          method: POST
          cors: true
  retornaChat:
    handler: src/handlers/retornaChat.handler
    events:
      - http:
          path: /chats/{id}
          method: GET
          cors: true
  deletarChat:
    handler: src/handlers/deletarChat.handler
    events:
      - http:
          path: /chats/{id}
          method: DELETE
          cors: true
  enviarMensagem:
    handler: src/handlers/criarMensagem.handler
    events:
      - http:
          path: /mensagens
          method: POST
          cors: true
  retornoMensagens:
    handler: src/handlers/retornaMensagens.handler
    events:
      - http:
          path: /mensagens
          method: GET
          cors: true
  retornaMensagem:
    handler: src/handlers/retornaMensagem.handler
    events:
      - http:
          path: /mensagens/{id}
          method: GET
          cors: true

resources:
  Resources:
    usersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: usersTable
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    conversationsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: conversationsTable
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
